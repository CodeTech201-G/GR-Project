{"ast":null,"code":"import { APICALL } from \"../Services/ApiServices\";\nimport { LoginUrl } from \"../Services/ApiEndPoints\";\nexport async function loginUser(dispatch, loginPayload) {\n  try {\n    dispatch({\n      type: \"REQUEST_LOGIN\"\n    });\n    await APICALL.service(LoginUrl, \"POST\", loginPayload).then(data => {\n      if (data.code === \"200\") {\n        let results = data.data;\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: results\n        });\n        localStorage.setItem(\"currentUser\", JSON.stringify(results));\n        localStorage.setItem(\"isAuthenticated\", true); // console.log(\"resobse : \", results);\n\n        return data;\n      } else {\n        data = {\n          errors: [data.message]\n        };\n        localStorage.setItem(\"isAuthenticated\", false);\n      }\n\n      dispatch({\n        type: \"LOGIN_ERROR\",\n        error: data.errors[0]\n      });\n      return;\n    }).catch(error => {\n      console.log(error);\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LOGIN_ERROR\",\n      error: error\n    });\n  }\n}\nexport async function logout(dispatch) {\n  dispatch({\n    type: \"LOGOUT\"\n  });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\nexport async function sessionTimeout(dispatch) {\n  dispatch({\n    type: \"SESSION_TIMEOUT\"\n  });\n}","map":{"version":3,"sources":["C:/Users/Suresh/Desktop/Projects/GRProject/GR-Project/src/Context/actions.js"],"names":["APICALL","LoginUrl","loginUser","dispatch","loginPayload","type","service","then","data","code","results","payload","localStorage","setItem","JSON","stringify","errors","message","error","catch","console","log","logout","removeItem","sessionTimeout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AACtD,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAML,OAAO,CAACM,OAAR,CAAgBL,QAAhB,EAA0B,MAA1B,EAAkCG,YAAlC,EACHG,IADG,CACGC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AACvB,YAAIC,OAAO,GAAGF,IAAI,CAACA,IAAnB;AACAL,QAAAA,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE,eAAR;AAAyBM,UAAAA,OAAO,EAAED;AAAlC,SAAD,CAAR;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAApC;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAuC,IAAvC,EAJuB,CAKvB;;AACA,eAAOL,IAAP;AACD,OAPD,MAOO;AACLA,QAAAA,IAAI,GAAG;AAAEQ,UAAAA,MAAM,EAAE,CAACR,IAAI,CAACS,OAAN;AAAV,SAAP;AACAL,QAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAuC,KAAvC;AACD;;AACDV,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,aAAR;AAAuBa,QAAAA,KAAK,EAAEV,IAAI,CAACQ,MAAL,CAAY,CAAZ;AAA9B,OAAD,CAAR;AACA;AACD,KAfG,EAgBHG,KAhBG,CAgBID,KAAD,IAAW;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KAlBG,CAAN;AAmBD,GArBD,CAqBE,OAAOA,KAAP,EAAc;AACdf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,aAAR;AAAuBa,MAAAA,KAAK,EAAEA;AAA9B,KAAD,CAAR;AACD;AACF;AAED,OAAO,eAAeI,MAAf,CAAsBnB,QAAtB,EAAgC;AACrCA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAO,EAAAA,YAAY,CAACW,UAAb,CAAwB,aAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACD;AAED,OAAO,eAAeC,cAAf,CAA8BrB,QAA9B,EAAwC;AAC7CA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD","sourcesContent":["import { APICALL } from \"../Services/ApiServices\";\nimport { LoginUrl } from \"../Services/ApiEndPoints\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    await APICALL.service(LoginUrl, \"POST\", loginPayload)\n      .then((data) => {\n        if (data.code === \"200\") {\n          let results = data.data;\n          dispatch({ type: \"LOGIN_SUCCESS\", payload: results });\n          localStorage.setItem(\"currentUser\", JSON.stringify(results));\n          localStorage.setItem(\"isAuthenticated\",true)\n          // console.log(\"resobse : \", results);\n          return data;\n        } else {\n          data = { errors: [data.message] };\n          localStorage.setItem(\"isAuthenticated\",false)\n        }\n        dispatch({ type: \"LOGIN_ERROR\", error: data.errors[0] });\n        return;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n  }\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: \"LOGOUT\" });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\n\nexport async function sessionTimeout(dispatch) {\n  dispatch({ type: \"SESSION_TIMEOUT\" });\n}"]},"metadata":{},"sourceType":"module"}